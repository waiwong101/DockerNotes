===
$ sudo apt-get update
$ sudo apt-get upgrade

Docker Engine: https://docs.docker.com/engine/installation/linux/ubuntulinux/
Docker Compose: https://docs.docker.com/compose/install/

$ sudo apt-get install apt-transport-https ca-certificates
$ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

# Remove any existing entries if exist below
sudo vi /etc/apt/sources.list.d/docker.list
## Add this to file above if ubuntu 14.04:
deb https://apt.dockerproject.org/repo ubuntu-trusty main
## Add this to file above if ubuntu 16.04:
deb https://apt.dockerproject.org/repo ubuntu-xenial main

$ sudo apt-get update

# Purge old repo if it exists:
$ sudo apt-get purge lxc-docker

# Verify that APT is pulling from the right repository.
$ apt-cache policy docker-engine

# install the linux-image-extra-* kernel packages. The linux-image-extra-* packages allows you use the aufs storage driver.
$ sudo apt-get update
$ sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual

sudo apt-get update
# Install docker
$ sudo apt-get install docker-engine

# Start the docker daemon.
$ sudo service docker start

=== Create Docker Group
Check if Docker group created. if created. add user to docker
$ sudo groupadd docker
$ sudo usermod -aG docker $USER

# Logout and run hello-world without sudo:
Logout
docker run hello-world

=== Install Docker Compose
sudo apt-get -y install python-pip
$ sudo pip install docker-compose

=== Create docker-compose.yml
version: '2'
services:
  db:
    image: mysql:5.7
    volumes:
      - "./.data/db:/var/lib/mysql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    volumes:
      - "./wordpress/wp_html:/var/www/html"
    links:
      - db
    ports:
      - "8000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_PASSWORD: wordpress

=== run docker-compose from project directory:
docker-compose up -d

/// if modify docker-compose
Stop your currently running docker-compose session:

docker-compose stop
Remove the existing container so we can map the volume to the host filesystem:

# Modify your docker-compose.yml before removing the old image
docker-compose rm wordpress

# Start WordPress again:
docker-compose up -d
